{"version":3,"sources":["components/Header.js","images/ic_checked.svg","components/CategoryItem.js","images/eye.png","components/Category.js","components/Catalogue.js","components/App.js","index.js"],"names":["Header","headerStyle","backgroundColor","this","props","market","color","className","style","alt","src","icon","name","postalCode","React","Component","CategoryItem","item","checked","to","marketid","categoryid","id","renderCheck","Category","selectAllItem","eye","category","categories","map","selectedSubCategory","open","selectedCategory","isAllChecked","renderCategoryItemArray","Catalogue","catalogue","marketId","subcategoryid","renderCategoryArray","App","renderCatalogue","state","match","params","subcategory","token","markets","company_id","category_id","items","getTokenFromApi","pepe","fetch","then","response","json","data","setState","getCategories","getPostalCode","mrkt","from","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.01e157ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../stylesheets/layout/App.scss';\r\n\r\nclass Header extends React.Component {\r\n\r\n render(){\r\n  const headerStyle = {\r\n    //Recibimos el color del fondo de la tienda por props y la metemos en esta variable, para usarla en el return.\r\n    backgroundColor: \"rgb(\" + this.props.market.color + \")\"\r\n  };\r\n     return (\r\n       <div className=\"headerIn\" style = {headerStyle} >\r\n         <img alt=\"icono de la tienda\" src={this.props.market.icon}></img>\r\n         <div className=\"shop\">\r\n           <span>{this.props.market.name}</span>\r\n           <small> Comprando en {this.props.postalCode}</small>\r\n          </div>\r\n       </div>\r\n     )\r\n    }\r\n  \r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/ic_checked.c09fabdb.svg\";","import React from 'react';\r\nimport '../stylesheets/layout/App.scss';\r\nimport {Link} from 'react-router-dom';\r\nimport checked from '../images/ic_checked.svg';\r\n\r\nclass CategoryItem extends React.Component{\r\n\r\n  renderCheck(){\r\n     if (this.props.item.checked === true){\r\n       return(<img className=\"checked\" src={checked} alt=\"check\"></img>);\r\n     }\r\n  }\r\n\r\n  render(){\r\n    \r\n    return (\r\n      // En este link se crea la ruta que se va a escribir el a URL: tienda/market/categoria/subcategoria.\r\n      <Link to= {`/tienda/${this.props.marketid}/${this.props.categoryid}/${this.props.item.id}`}>\r\n        <li className='categoryListItem' key = {this.props.item.id}>\r\n          <img className=\"item-icon\" src = {this.props.item.icon} alt=\"icono del producto\"></img> \r\n          {this.props.item.name} {this.renderCheck()} \r\n        </li>\r\n      </Link>\r\n    )\r\n  }\r\n} \r\n\r\nexport default CategoryItem;","export default __webpack_public_path__ + \"static/media/eye.30acd8dd.png\";","import React from 'react';\r\nimport CategoryItem from './CategoryItem';\r\nimport {Link} from 'react-router-dom';\r\nimport Collapsible from 'react-collapsible';\r\nimport eye from '../images/eye.png';\r\nimport '../stylesheets/layout/App.scss';\r\n\r\n\r\n\r\nclass Category extends React.Component {\r\n\r\n  selectAllItem = {id:-1, name:\"Ver toda la sección\", icon: eye, checked : false};\r\n\r\n  renderCategoryItemArray(){\r\n    const subCategory = this.props.category.categories.map(item => {\r\n      return (\r\n      <CategoryItem \r\n        key={item.id} \r\n        item = {item} \r\n        marketid={this.props.marketid} \r\n        categoryid={this.props.category.id} \r\n        selectedSubCategory={this.props.selectedSubCategory}>\r\n      </CategoryItem>);\r\n    });\r\n    return subCategory;\r\n  }\r\n  \r\n  render(){\r\n\r\n    let open = false;\r\n\r\n    // Aquí ordenamos al colapsable a que, cuando esté seleccionado y tenga el mismo id que la categoría, se abra.\r\n    if (this.props.selectedCategory != null && this.props.category.id == this.props.selectedCategory)\r\n    {\r\n      open = true;\r\n      if (this.props.selectedSubCategory != null && this.props.selectedSubCategory == -1){\r\n        \r\n        this.selectAllItem.checked = !this.selectAllItem.checked\r\n        //Cuando el colapsable esté seleccionado, vamos a poner un check en cada uno de los items si no está seleccionado.\r\n        for (let item of this.props.category.categories){\r\n          item.checked = this.selectAllItem.checked;\r\n        }\r\n        \r\n        //Ahora vamos a controlar los checks de las subcategorías. \r\n   \r\n      }else if (this.props.selectedSubCategory != null && this.props.selectedSubCategory != -1){\r\n        for (let item of this.props.category.categories){\r\n          if (item.id == this.props.selectedSubCategory){\r\n            if ( item.checked == null || item.checked === false){\r\n              item.checked = true;\r\n            } else{ item.checked = false}\r\n          }\r\n        }\r\n         //Aquí relacionamos el check de \"ver todo\" con los de las subcategorías.\r\n        let isAllChecked = true; \r\n        for (let item of this.props.category.categories){\r\n          if( item.checked == null || item.checked == false){\r\n             isAllChecked = false;\r\n          }\r\n        }\r\n        this.selectAllItem.checked = isAllChecked;\r\n      }\r\n    }\r\n\r\n    return (\r\n     <li className=\"category\" key= {this.props.category.id}>\r\n\r\n       {/* En este link se crea la ruta que se va a escribir el a URL: tienda/market/categoria */}\r\n        <Link to={`/tienda/${this.props.marketid}/${this.props.category.id}`}>\r\n          <div>\r\n           <img className=\"icon\" src= {this.props.icon} alt=\"icono del producto\"></img>\r\n           {this.props.category.name}\r\n          </div>\r\n        </Link>\r\n        <ul className=\"categoryList\">\r\n          <Collapsible className=\"collapsible\" open={open} >\r\n            <CategoryItem \r\n             key={this.selectAllItem.id} \r\n             item = {this.selectAllItem} \r\n             marketid={this.props.marketid} \r\n             categoryid={this.props.category.id} \r\n             selectedSubCategory={this.props.selectedSubCategory}>\r\n            </CategoryItem>\r\n            {this.renderCategoryItemArray()}\r\n          </Collapsible>\r\n        </ul>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\nimport Category from './Category'\r\nimport '../stylesheets/layout/App.scss';\r\n\r\nclass Catalogue extends React.Component {\r\n\r\n  renderCategoryArray(){\r\n    const catalogueItem = this.props.catalogue.map(item =>{\r\n      return (\r\n        <Category \r\n          key={item.id} \r\n          category={item} \r\n          icon= {item.icon} \r\n          marketid={this.props.marketId} \r\n          selectedCategory={this.props.categoryid} \r\n          selectedSubCategory={this.props.subcategoryid}>\r\n        </Category>\r\n      );\r\n    });\r\n    \r\n    return catalogueItem\r\n  }\r\n  render(){\r\n    return <ul className=\"catalogueList\">{this.renderCategoryArray()}</ul>\r\n  }\r\n}\r\n\r\nexport default Catalogue;","import React from \"react\";\nimport Header from \"./Header\";\nimport Catalogue from \"./Catalogue\";\nimport {Route,Switch,Redirect} from 'react-router-dom';\nimport '../stylesheets/layout/App.scss';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n    token:\"\",\n    postalCode: 28010,\n    markets: [],\n    market: {name: \"tienda\"},\n    company_id: 50,  \n    catalogue: [],\n    category_id: 0,\n    items: [],\n    }\n  }\n\n  //Obligamos al token a estar listo cuando se monte el componente.\n  componentDidMount(){\n    this.getTokenFromApi();//TODO\n  }\n  \n  //Función con la que se consigue el Token.\n  getTokenFromApi(pepe) {\n    fetch(\n      `https://api.comprea.com/v7/user/session`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({token : data.token});\n        this.getCategories(data.token);\n        this.getPostalCode(data.token)\n        //pepe(data.token);\n      });  \n  }\n\n  //función con la que se consigue la lista de las tiendas (Markets)\n  getPostalCode(token){    \n\n      fetch (\n          `https://api.comprea.com/user/postalcode?token=${token}&postalcode=${this.state.postalCode}`\n        )\n        .then((response) => response.json())\n        .then((data) => {\n          this.setState({markets : data.markets});\n        \n          //En el siguiente for lo que se consigue es que \n        for(let mrkt of data.markets){\n          if (mrkt.id == this.state.company_id){\n          this.setState( {market: mrkt});\n        }\n   }\n        });       \n  }    \n  \n  //función con la que se consigue las categorías de cada tienda.\n  getCategories(token){  \n    \n    fetch(\n      `https://api.comprea.com/v7/company/categories?token=${token}&company_id=${this.state.company_id}`\n    )\n    .then((response) => response.json())\n    .then((data) => {\n      this.setState({catalogue : data.categories});\n    });  \n  }\n\n  //función con la que se consigue las subcategorías de cada tienda.\n  getItemsFromCategories(){\n    fetch(\n      `https://api.comprea.com/v7/company/items?token=${this.state.token}&company_id=${this.state.company_id}&category_id=${this.state.category_id}`\n    )\n    .then((response) => response.json())\n    .then((data) => {\n      this.setState({items : data.items});\n    });  \n  }\n  \n\n  renderCatalogue = (props) => {\n\n\n    return(\n      <div>\n          <Header \n           market = {this.state.market}\n           postalCode = {this.state.postalCode}\n           >           \n          </Header>\n        <div className=\"catalogue\">\n          <Catalogue \n           catalogue = {this.state.catalogue} \n           marketId = {props.match.params.marketid} \n           categoryid = {props.match.params.category} \n           subcategoryid = {props.match.params.subcategory}\n          />\n        </div>\n      </div>);\n  }\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <Redirect\n            from=\"/\"\n            to=\"/tienda/50\" />\n        <Switch>   \n          <Route exact path='/tienda/:marketid' render={this.renderCatalogue}>\n          </Route>    \n          <Route exact path='/tienda/:marketid/:category' render={this.renderCatalogue}>\n          </Route>\n          <Route exact path='/tienda/:marketid/:category/:subcategory' render={this.renderCatalogue}>\n          </Route>\n        </Switch>  \n      </div>\n     );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/main.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}